import React, { useState } from "react";
import "./compiler.css"; // Add styles for the compiler UI

const Compiler = ({ initialCode, language }) => {
  const [code, setCode] = useState(initialCode || ""); // Preload initial code
  const [output, setOutput] = useState("");
  const [selectedLanguage, setSelectedLanguage] = useState(language || "c");

  const handleCompile = async () => {
    // Example: Compile code using an API or local logic
    try {
      const response = await fetch("https://example-compiler-api.com/compile", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ code, language: selectedLanguage }),
      });
      const result = await response.json();
      setOutput(result.output);
    } catch (error) {
      setOutput(`Error: ${error.message}`);
    }
  };

  return (
    <div className="compiler-container">
      <h2>Code Editor</h2>
      <textarea
        value={code}
        onChange={(e) => setCode(e.target.value)}
        className="code-editor"
        rows="10"
      ></textarea>
      <div className="compiler-options">
        <select
          value={selectedLanguage}
          onChange={(e) => setSelectedLanguage(e.target.value)}
        >
          <option value="c">C</option>
          <option value="cpp">C++</option>
          <option value="python">Python</option>
          <option value="javascript">JavaScript</option>
        </select>
        <button onClick={handleCompile} className="compile-button">
          Compile & Run
        </button>
      </div>
      <div className="compiler-output">
        <h3>Output:</h3>
        <pre>{output}</pre>
      </div>
    </div>
  );
};

export default Compiler;
